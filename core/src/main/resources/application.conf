integrator {
  template {
    baseDir: ""
  }
  server {
    host: "0.0.0.0"
    port: 8080
    schema: "http"
    ssl {
      privider: "JDK" //or OPENSSL
      //certChainFile: ""
      //keyFile: ""
      //keyPassword: ""
    }
    fileUploadDir: ""
    request {
      maxInitialLineLength: 4096
      maxHeaderSize: 8192
      maxChunkSize: 8192
    }

    response {
      compressionLvl: 6
    }
  }
}

docker {
  # The Docker Host.
  host = "0.0.0.0"

  # The Docker TCP port.
  port = 2003

  # List of images they need to be monitored.
  # For convenience must provide an alias in order to facilitate the visualization
  # [{"container-id","container-alias"}]
  containers = [{"a3998c453f8e":"kamon-grafana-dashboard"}]
}

kamon {
  trace {
    level-of-detail = simple-trace
    sampling = all
  }
  statsd {
    hostname=localhost
    port=8125
    subscriptions {
      histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
      docker-network  = [ "**" ]
      docker-memory   = [ "**" ]
      docker-cpu      = [ "**" ]
    }
    includes {
      actor       = [ "*" ]
      trace       = [ "*" ]
      dispatcher  = [ "*" ]
    }
  }
  modules {
    kamon-statsd.auto-start = yes
    kamon-akka.auto-start = yes
  }
  internal-config {
    akka.loglevel = DEBUG
  }
  akka {
    ask-pattern-timeout-warning = heavyweight
  }
  metric.filters {
    akka-actor {
      includes = [ "my-app/user/worker", "my-app/user/channelInitializer" ]
      excludes = [ "my-app/system/**" ]
    }
    #akka-dispatcher {
    #  includes = [ "my-app/**" ]
    #}
#    instrument-settings {
#      actor.mailbox-size {
#        refresh-interval = 250 ms
#      }
#    }
  }
}